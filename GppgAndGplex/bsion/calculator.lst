
// ==========================================================================
//  GPPG error listing for yacc source file <calculator.y - 2018/9/3 22:40:47>
// ==========================================================================
//  Version:  1.5.2
//  Machine:  小兰
//  DateTime: 2018/9/3 22:55:45
//  UserName: stern
// ==========================================================================


%namespace Test1

%using Test1.common;
%using Test1.flex;

%union {
	public AbstractAst a;
	public double d;
	public Symbol s;   /* 指定符号 */
	public SymbolList sl;
	public int fn;     /* 指定函数 */
}

/* 声明记号 */
%token <d> NUMBER
%token <s> NAME
%token <fn> FUNC
%token EOL

%token IF THEN ELSE WHILE DO LET

%nonassoc <fn> CMP
%right '='
%left '+' '-'
%left '*' '/'
%nonassoc '|' UMINUS

%type <a> exp stmt list explist
%type <sl> symlist

%start calclist

%%
// Error: NonTerminal symbol "explist" has no productions
// Warning: NonTerminal symbol "explist" is unreachable
// Warning: NonTerminal symbol "list" is unreachable
// Error: NonTerminal symbol "calclist" has no productions
// Error: NonTerminal symbol "symlist" has no productions
// Warning: NonTerminal symbol "symlist" is unreachable
// Warning: NonTerminal symbol "stmt" is unreachable
// Warning: Terminating explist fixes the following size-1 NonTerminal set
   // {explist}
// Warning: Terminating exp fixes the following size-2 NonTerminal set
   // {exp, stmt}
// Error: There are 6 non-terminating NonTerminal Symbols
   //  {exp, stmt, explist, symlist, calclist, $accept}
// Warning: NonTerminal symbol "exp" is unreachable
// Warning: Terminating calclist fixes the following size-2 NonTerminal set
   // {calclist, $accept}
// Warning: Terminating symlist fixes the following size-1 NonTerminal set
   // {symlist}
// ------------------------------------------------------------------------
stmt: IF exp THEN list	{ $$ = new Flow('I', $2, $4, null); }
	| IF exp THEN list ELSE list	{ $$ = new Flow('I', $2, $4, $6); }
	| WHILE exp DO list		{ $$ = new Flow('W', $2, $4, null); }
	| exp
;

list: /* 空 */ { $$ = null; }
	| stmt ';' list 
	{
		if ($3 == null)
			$$ = $1;
		else
			$$ = new Ast('L', $1, $3);
	}
;

exp: exp CMP exp { $$ = new Ast($2,$1,$3); }
   | exp '+' exp { $$ = new Ast('+',$1,$3); }
;// ==========================================================================

